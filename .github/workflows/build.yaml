name: Build
on: [push, pull_request]

jobs:
  # lint code with golangci-lint using built-in action
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  # run tests
  test:
    name: Test
    runs-on: ubuntu-latest 
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v2

      - name: Test
        run: make test

  # build go binary, this is actully not really needed, it just validates the code builds
  build:
    name: Build
    runs-on: ubuntu-latest 
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build
        run: make build